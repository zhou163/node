"use strict";

exports.__esModule = true;
exports["default"] = reduxCombineActions;
function isArrayOfFunctions(array) {
    return Array.isArray(array) && array.length > 0 && array.every(function (item) {
        return item instanceof Function;
    });
}

function reduxCombineActions() {
    return function (next) {
        return function (action) {
            if (!isArrayOfFunctions(action.payload)) {
                return next(action);
            }

            var types = action.types;
            var sequence = action.sequence;

            var actions = action.payload;
            var PENDING = types[0];
            var FULFILLED = types[1];
            var REJECTED = types[2];

            var promise = undefined;

            next({
                type: PENDING
            });

            if (sequence) {
                promise = actions.reduce(function (result, item) {
                    return result.then(function () {
                        return next(item());
                    });
                }, Promise.resolve());
            } else {
                promise = Promise.all(actions.map(function (item) {
                    return next(item());
                }));
            }

            return promise.then(function (payload) {
                return next({
                    payload: payload,
                    type: FULFILLED
                });
            }, function (error) {
                return next({
                    payload: error,
                    error: true,
                    type: REJECTED
                });
            });
        };
    };
}

module.exports = exports["default"];